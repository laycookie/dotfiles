
# # Do not modify this file!  It was generated by ‘nixos-generate-config’
# # and may be overwritten by future invocations.  Please make changes
# # to /etc/nixos/configuration.nix instead.
# { config, lib, pkgs, modulesPath, ... }:
# 
# {
#   imports =
#     [ (modulesPath + "/installer/scan/not-detected.nix")
#     ];
# 
#   boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "sd_mod" ];
#   boot.initrd.kernelModules = [ ];
#   boot.kernelModules = [ "kvm-intel" ];
#   boot.extraModulePackages = [ ];
# 
#   fileSystems."/" =
#     { device = "/dev/disk/by-uuid/23af6e5f-4be9-43cb-9501-845715738bf8";
#       fsType = "ext4";
#     };
# 
#   fileSystems."/boot" =
#     { device = "/dev/disk/by-uuid/72E7-3B96";
#       fsType = "vfat";
#     };
# 
#   swapDevices =
#     [ { device = "/dev/disk/by-uuid/254ddefc-34f6-4182-9cfd-c1bb3032fcb9"; }
#     ];
# 
#   # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
#   # (the default) this is the recommended approach. When using systemd-networkd it's
#   # still possible to use this option, but it's recommended to use it in conjunction
#   # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
#   networking.useDHCP = lib.mkDefault true;
#   # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
#   # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;
# 
#   nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
#   hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
# }





# LEGACY

# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/23af6e5f-4be9-43cb-9501-845715738bf8";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/72E7-3B96";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/disk2" =
    { device = "/dev/disk/by-uuid/32d80224-da99-40aa-8f98-ee4555013038";
      fsType = "btrfs";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/254ddefc-34f6-4182-9cfd-c1bb3032fcb9"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
